#!/bin/bash
################################################################################
#
#         FILE: el_makedo
#
#        USAGE:  el_makedo
#
#      OPTIONS: 
#
#  DESCRIPTION: 
#
#  gl_makedo is part of the suite to test the CP-PAW code against the
#  element data base for 0 K structure by Lejaeghere et al.
#
#  1) it constructs a shell script "el_do_sample", which executes all
#  test calculations. Undesired test calculations can be removed
#
#  2) it updates all structure input files in the directory "Cases"
#   using the structure input files in the directory "Samples" and the
#   species information from "bin/Species"
#
#  Example:
#
#    el_makedo
#
#       AUTHOR: Peter Bloechl; peter.bloechl@tu-clausthal.de
#      CREATED: 17. Aug 2014
#
################################################################################
export V=yes
THISDIR=$(pwd)
if [[ $V = yes ]] ; then echo THISDIR=$THISDIR ; fi
ELDIR=$THISDIR
#
#== define directory holding the structure files
STRCDIR=$ELDIR/bin/Strcfiles
if [[ ! -d $STRCDIR ]]; then 
   echo "error in $0: STRCDIR does not exist"
   exit 1 
fi
#== define directory with species information
SPECIESDIR=$ELDIR/bin/Speciesfiles
if [[ ! -d $SPECIESDIR ]]; then 
   echo "error in $0: SPECIESDIR does not exist"
   exit 1 
fi
#
CASESDIR=$ELDIR/Cases
DOSCRIPT=$ELDIR/el_do_sample
TMPDIR=$THISDIR                # directory for temporary files
#######################################################################
#  prepare calcall_sample
#######################################################################
echo '#!/bin/bash'                                 >$DOSCRIPT
echo '# this file is created automatically by el_makedo'    >>$DOSCRIPT
echo "export ELDIR=$ELDIR"                        >>$DOSCRIPT
echo 'function calcone {'                         >>$DOSCRIPT
echo 'ROOT=${ELDIR}/$1'                           >>$DOSCRIPT
echo 'rm ${ROOT}_*.out'                           >>$DOSCRIPT
echo 'rm ${ROOT}_*.err'                           >>$DOSCRIPT
echo 'rm ${ROOT}_*_ballstick.dx'                  >>$DOSCRIPT
echo 'rm ${ROOT}_*_constr.report'                 >>$DOSCRIPT
echo 'rm ${ROOT}_*_r.tra'                         >>$DOSCRIPT
echo 'rm ${ROOT}_*.pdos'                          >>$DOSCRIPT
echo 'cp ${ELDIR}/sample.cntl ${ROOT}.cntl'       >>$DOSCRIPT
echo 'echo doing $1'                              >>$DOSCRIPT
echo 'paw_scanlat -j 3 -p ${SY} -l \
             "98.02 98.35 98.68 99.01 99.34 99.67 100.00 \
             100.33 100.66 100.99 101.32 101.65 101.98" \
             1>${ROOT}.err 2>&1' >>$DOSCRIPT
echo  'echo $1 done'                              >>$DOSCRIPT
echo '}'                                          >>$DOSCRIPT
################################################################
# Scan Samples directory and update all structure files in the 
#    Cases directory
# Produce a shell script calcall_sample to be executed
################################################################
echo "LIST=\"\""                                 >>$DOSCRIPT
for FILE in $STRCDIR/*.strc_sample ; do
  if [[ $V = yes ]] ; then echo "doing FILE=$FILE" ; fi
  NAME=${FILE%.strc_sample} # strip extension
  NAME=${NAME##*/}          # remove all preceeding directories
  PDIR=$CASESDIR/$NAME
  if [[ ! -d $PDIR ]] ; then mkdir $PDIR;  fi
  sy=$( echo "$NAME" | tr -s '[:upper:]' '[:lower:]' )  #make lowercase
  SY=$NAME
  if [[ ! -e ${SPECIESDIR}/${SY}.species ]] ; then
    echo "error in $0: species file not present"
    exit 1
  fi
  paw_resolve -f $SY.species=${SPECIESDIR}/${sy}.species \
              ${STRCDIR}/${SY}.strc_sample | \
              tr '[a-z]' '[A-Z]' | \
              sed -e s/ORBPOT_X/ORBPOT/g \
                  -e s/R=50./R=80./g \
              >${PDIR}/${SY}.strc
  ROOT=${PDIR}/$NAME
  ROOT=${ROOT#${ELDIR}/} 
  echo "LIST=\"\$LIST ${ROOT}\"" >>$DOSCRIPT
  if [[ $V = yes ]] ; then echo "... $NAME done"; fi
done
echo "for X in \$LIST; do" >>$DOSCRIPT
echo "  calcone \$X "        >>$DOSCRIPT
echo "done"                >>$DOSCRIPT 
echo 'exit 0'              >>$DOSCRIPT
chmod +x $DOSCRIPT
exit 0
